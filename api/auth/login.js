import db from '../../lib/db.js'; import bcrypt from 'bcryptjs'; import jwt from 'jsonwebtoken'; export default async function handler(req,res){ if(req.method!=='POST') return res.status(405).end(); const {email,password}=req.body||{}; if(!email||!password) return res.status(400).json({error:'email e senha obrigatórios'}); const ae=process.env.ADMIN_EMAIL, ap=process.env.ADMIN_INITIAL_PASSWORD; if(ae&&ap){ const r=await db.query('select id from users where email=$1',[ae]); if(r.rowCount===0){ const h=await bcrypt.hash(ap,10); await db.query('insert into users(email,name,role,password_hash) values ($1,$2,$3,$4)',[ae,'Pai Wesley','admin',h]); } } const q=await db.query('select id,email,password_hash,role from users where email=$1',[email]); if(q.rowCount===0) return res.status(401).json({error:'credenciais inválidas'}); const u=q.rows[0]; const ok=await bcrypt.compare(password,u.password_hash); if(!ok) return res.status(401).json({error:'credenciais inválidas'}); const t=jwt.sign({sub:u.id,role:u.role,email:u.email},process.env.JWT_SECRET||'secret',{expiresIn:'7d'}); return res.json({token:t}); }